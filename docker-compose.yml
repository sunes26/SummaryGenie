version: '3.8'

# ==========================================
# SummaryGenie Docker Compose Configuration
# Firebase 전용 버전
# ==========================================

services:
  # ===== 메인 애플리케이션 =====
  app:
    container_name: summarygenie-server
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3000:3000"
    
    # .env 파일 자동 로드
    env_file:
      - .env
    
    # 환경변수 설정 (docker run -e 대신)
    environment:
      # 기본 설정
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-3000}
      
      # ===== 필수 환경변수 =====
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      JWT_SECRET: ${JWT_SECRET}
      ALLOWED_EXTENSION_IDS: ${ALLOWED_EXTENSION_IDS}
      
      # ===== 사용량 제한 설정 =====
      FREE_USER_DAILY_LIMIT: ${FREE_USER_DAILY_LIMIT:-3}
      DATA_RETENTION_DAYS: ${DATA_RETENTION_DAYS:-30}
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS:-60000}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS:-30}
      CACHE_TTL: ${CACHE_TTL:-60000}
      
      # ===== Firebase 설정 =====
      FIREBASE_DATABASE_URL: ${FIREBASE_DATABASE_URL}
      FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
      TEST_FIREBASE_CONNECTION: ${TEST_FIREBASE_CONNECTION:-true}
      
      # ===== 기타 설정 =====
      LOG_LEVEL: ${LOG_LEVEL:-info}
      FALLBACK_MODEL: ${FALLBACK_MODEL:-gpt-4o-mini}
    
    # 볼륨 마운트 (선택사항)
    volumes:
      # 로그 파일 영구 저장
      - ./logs:/app/logs
    
    # 보안 설정
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    
    # 리소스 제한
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    
    # 헬스체크
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s

# ==========================================
# 사용법:
#
# 1. 빌드 및 실행:
#    docker-compose up -d
#
# 2. 재빌드:
#    docker-compose up -d --build
#
# 3. 로그 확인:
#    docker-compose logs -f
#
# 4. 환경변수 확인:
#    docker-compose exec app env | grep FREE_USER_DAILY_LIMIT
#
# 5. 중지:
#    docker-compose down
#
# 6. 컨테이너 내부 접속:
#    docker-compose exec app sh
# ==========================================